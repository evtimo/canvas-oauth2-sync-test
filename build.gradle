plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.canvas.sync'
version = '0.0.1-SNAPSHOT'

ext {
	queryDslVersion = '5.0.0'
	springCloudVersion = '2023.0.0'
	lombockVersion = '1.18.30'
}

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation("org.projectlombok:lombok:${lombockVersion}")
	implementation("com.querydsl:querydsl-core:${queryDslVersion}")
	implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")

	annotationProcessor(
			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta",
			"jakarta.persistence:jakarta.persistence-api:3.1.0",
			"org.projectlombok:lombok:${lombockVersion}"
	)

	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.register('loadEnv', Exec) {
	workingDir '.'
	commandLine 'sh', '-c', 'set -a && . ./.env && env'
	standardOutput = new ByteArrayOutputStream()

	doLast {
		standardOutput.toString().split("\n").each { line ->
			def (key, value) = line.split("=", 2)
			project.ext.set(key, value)
		}
	}
}

bootRun {
	dependsOn loadEnv
	doFirst {
		loadEnv.standardOutput.toString().split("\n").each { line ->
			def (key, value) = line.split("=", 2)
			environment key, value
		}
	}
}

